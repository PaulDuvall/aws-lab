AWSTemplateFormatVersion: 2010-09-09
Description: This deploys a PHP application using Elastic Beanstalk

Parameters:
  VpcCidrBlock:
    Type:    String
    Default: 10.1.0.0/16
  Subnet1CidrBlock:
    Type:    String
    Default: 10.1.10.0/24
  Subnet2CidrBlock:
    Type:    String
    Default: 10.1.11.0/24

Resources:
  #
  # VPC for EB Applications
  #

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:          !Ref VpcCidrBlock
      EnableDnsSupport:   true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-VPC

  InternetGateway:
    Type:      AWS::EC2::InternetGateway
    DependsOn: VPC
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-InternetGateway

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:             !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:               !Ref VPC
        CidrBlock:           !Ref Subnet1CidrBlock
        AvailabilityZone:    !Select [ 0, !GetAZs ]
        MapPublicIpOnLaunch: true
        Tags:
        - Key:   Name
          Value: !Sub ${AWS::StackName}-PublicSubnet1

  PublicSubnet2:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:               !Ref VPC
        CidrBlock:           !Ref Subnet2CidrBlock
        AvailabilityZone:    !Select [ 1, !GetAZs ]
        MapPublicIpOnLaunch: true
        Tags:
        - Key:   Name
          Value: !Sub ${AWS::StackName}-PublicSubnet2

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key:   Name
        Value: !Sub ${AWS::StackName}-PublicRouteTable

  # Entries for PublicRouteTable
  InternetGatewayRoute:
    Type:      AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId:         !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:            !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:     !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:     !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  #
  # PHP Application
  #

  WebApp:
    Type: AWS::ElasticBeanstalk::Application
    # Explicitly state this to avoid a race condition
    DependsOn:
      - InstanceProfile
      - Alb
    Properties:
      ApplicationName: Web App
      Description: AWS Elastic Beanstalk PHP Sample Application

  WebAppVersion:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    Properties:
      ApplicationName: !Ref WebApp
      Description:     WebApp v1.3
      SourceBundle:
        S3Bucket: elastic-beanstalk-sample
        # Copied from https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/tutorials.html
        S3Key:    php.zip

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html
  WebAppEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName:  !Ref WebApp
      Description:      !Sub Environemnt for ${!Ref WebApp}
      TemplateName:     !Ref WebAppConfigurationTemplate
      VersionLabel:     !Ref WebAppVersion

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-configurationtemplate.html
  WebAppConfigurationTemplate:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    Properties:
      ApplicationName:   !Ref WebApp
      Description:       !Sub Configuration for ${!Ref WebApp}
      # Get official list of SolutionStackNames via `aws elasticbeanstalk  list-available-solution-stacks`
      SolutionStackName: 64bit Amazon Linux 2 v3.1.3 running PHP 7.4
      # https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options.html
      OptionSettings:
        - Namespace:  aws:autoscaling:asg
          OptionName: MinSize
          Value:      2

        - Namespace:  aws:autoscaling:asg
          OptionName: MaxSize
          Value:      2

        - Namespace:  aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value:      LoadBalanced

        - Namespace:  aws:elasticbeanstalk:environment
          OptionName: LoadBalancerType
          Value:      application

        # This value cannot be changed once the environment is created
        - Namespace:  aws:elasticbeanstalk:environment
          OptionName: LoadBalancerIsShared
          Value:      true

        - Namespace:  aws:elbv2:loadbalancer
          OptionName: SharedLoadBalancer
          Value:      !Ref Alb

        - Namespace:  aws:elbv2:listener:80
          OptionName: Rules
          Value:      web

        - Namespace:  aws:elbv2:listenerrule:web
          OptionName: PathPatterns
          Value:      /app/*

        - Namespace:  aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value:      !GetAtt InstanceProfile.Arn

        - Namespace:  aws:ec2:vpc
          OptionName: VPCId
          Value:      !Ref VPC

        - Namespace:  aws:ec2:vpc
          OptionName: Subnets
          Value:      !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ] ]

        # - Namespace:  aws:ec2:vpc
        #   OptionName: DbSubnets
        #   Value:      !Sub "${!Ref PublicSubnet1},${!Ref PublicSubnet2}"

  # #
  # # Node.js Application
  # #
  #
  # RestApi:
  #   Type: AWS::ElasticBeanstalk::Application
  #   # Explicitly state this to avoid a race condition
  #   DependsOn: InstanceProfile
  #   Properties:
  #     ApplicationName: REST API
  #     Description: AWS Elastic Beanstalk Node.js Sample REST API
  #
  # RestApiVersion:
  #   Type: AWS::ElasticBeanstalk::ApplicationVersion
  #   Properties:
  #     ApplicationName: !Ref RestApi
  #     Description:     Rest API v1.0
  #     SourceBundle:
  #       S3Bucket: elastic-beanstalk-sample
  #       # Copied from https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/tutorials.html
  #       S3Key:    nodejs.zip
  #
  # # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html
  # RestApiEnvironment:
  #   Type: AWS::ElasticBeanstalk::Environment
  #   Properties:
  #     ApplicationName:  !Ref RestApi
  #     Description:      !Sub Environemnt for ${!Ref RestApi}
  #     TemplateName:     !Ref RestApiConfigurationTemplate
  #     VersionLabel:     !Ref RestApiVersion
  #
  # # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticbeanstalk-configurationtemplate.html
  # RestApiConfigurationTemplate:
  #   Type: AWS::ElasticBeanstalk::ConfigurationTemplate
  #   Properties:
  #     ApplicationName:   !Ref RestApi
  #     Description:       !Sub Configuration for ${!Ref RestApi}
  #     # Get official list of SolutionStackNames via `aws elasticbeanstalk  list-available-solution-stacks`
  #     SolutionStackName: 64bit Amazon Linux 2 v3.1.3 running PHP 7.4
  #     # https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options.html
  #     OptionSettings:
  #       - Namespace:  aws:autoscaling:asg
  #         OptionName: MinSize
  #         Value:      2
  #
  #       - Namespace:  aws:autoscaling:asg
  #         OptionName: MaxSize
  #         Value:      2
  #
  #       - Namespace:  aws:elasticbeanstalk:environment
  #         OptionName: EnvironmentType
  #         Value:      LoadBalanced
  #
  #       - Namespace:  aws:autoscaling:launchconfiguration
  #         OptionName: IamInstanceProfile
  #         Value:      !GetAtt InstanceProfile.Arn
  #
  #       - Namespace:  aws:ec2:vpc
  #         OptionName: VPCId
  #         Value:      !Ref VPC
  #
  #       - Namespace:  aws:ec2:vpc
  #         OptionName: Subnets
  #         Value:      !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ] ]

  #
  # Intance Profile to be used by EB
  #

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceProfileRole

  InstanceProfileRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: InstanceProfileRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      # https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-attach-managed-policy/
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier

  #
  # ALB
  # Adapted from https://computingforgeeks.com/configure-aws-application-load-balancer-with-cloudformation/
  #

  AlbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: !Sub Security group for ${AWS::StackName} ALB
        GroupName:        !Sub ${AWS::StackName}-sg
        VpcId:            !Ref VPC
        SecurityGroupIngress:
          - CidrIp:     0.0.0.0/0
            IpProtocol: tcp
            FromPort:   80
            ToPort:     80

          - CidrIp:     0.0.0.0/0
            IpProtocol: tcp
            FromPort:   443
            ToPort:     443

  Alb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
        Name:          !Sub ${AWS::StackName}-LB
        Scheme:        internet-facing
        Type:          application
        IpAddressType: ipv4
        Subnets:
          - !Ref PublicSubnet1
          - !Ref PublicSubnet2
        SecurityGroups:
          - !Ref AlbSecurityGroup
        # Supported values for LoadBalancerAttributes key are documented at
        # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticloadbalancingv2-loadbalancer-loadbalancerattributes.html
        # LoadBalancerAttributes:

  AlbHttpListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
        LoadBalancerArn: !Ref Alb
        Port:            80
        Protocol:        HTTP
        DefaultActions:
          - Order: 1
            Type:  fixed-response
            FixedResponseConfig:
              ContentType: text/plain
              StatusCode:  404
              MessageBody: You can't haz HTTP 200
        # Use these instead to support HTTPS
        # Port:      443
        # Protocol:  "HTTPS"
        # SslPolicy: "ELBSecurityPolicy-2016-08"
        # Certificates:
        #   # Create using this guide
        #   # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-certificatemanager-certificate.html
        #   - CertificateArn: !Ref HttpsListenerCertificate
